#!/opt/fileHash/venv/bin/python

import click
import hashlib
import os

@click.command()
@click.argument('file_paths', type=str,)
@click.option('--algorithm', '-a', default='md5',
              type=click.Choice(['md5', 'sha1'], case_sensitive=False),
              help='Hash algorithm to use (md5 or sha1). Default is md5.')
@click.option('--use-system-hash', '-s', is_flag=True,
              help='Use the md5sum command provided by the operating system '
                   'instead of the hashlib library.')
def gethash(file_paths, algorithm, use_system_hash):
    """
    Given a string argument of unique file paths, separated by \\n, get the md5 hash of each of these files and print them in the console.
    """

    if algorithm.lower() == 'md5':
        hash_func = hashlib.md5
        command = "md5sum"
    else:
        hash_func = hashlib.sha1
        command = "sha1sum"

    paths = file_paths.replace('\r', '').replace('\\n', '\n').split('\n')
    # print(paths)

    for path in paths:
        try:

            if use_system_hash:
                cmd = f"{command} {path}"
                result = os.popen(cmd).read()
                file_hash = result.split()[0]
            else:
                with open(path, 'rb') as f:
                    file_hash = hash_func()
                    while chunk := f.read(8192):
                        file_hash.update(chunk)
                    click.echo(f'{path}: {file_hash.hexdigest()}')
        except FileNotFoundError:
            click.echo(f'File not found: {path}')
        except PermissionError:
            click.echo(f"Permission denied: {path}")

if __name__ == '__main__':
    gethash()
